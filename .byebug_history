c
resposta
c
users_sede.reduce(0) {|acc, cur| acc + cur.alunos}
users_sede.reduce {|acc, cur| acc + cur.alunos}
users_sede.reduce(0) {|acc, cur| acc + cur.alunos}
users_sede[0].alunos
users_sede.reduce{|acc, oi| acc + oi.alunos}
users_sede.reducer{|oi| oi.alunos + acc, 0}
users_sede[0]
users_sede
exit
c
query.filter { |key| key[0] == mes }.keys[0][2]
query.filter { |key| key[0] == mes }.keys[0]
query.filter { |key| key[0] == mes }.keys
query.filter { |key| key[0] == mes }[0]
query.filter { |key| key[0] == mes }
mes
c
i
c
object.turma_alunos[0].turma
object.turma_alunos[0].turmas
object.turma_alunos[0]
object.turma_alunos
object
c
object.turma_alunos.filter { |turma_aluno| turma_aluno.status == 'ativo' }.map{ |turma_aluno| turma_aluno.turma}
object.turma_alunos.filter { |turma_aluno| turma_aluno.status == 'ativo' }.turmas
object.turma_alunos.filter { |turma_aluno| turma_aluno.status == 'ativo' }.turma
object.turma_alunos.filter { |turma_aluno| turma_aluno.status == 'ativo' }
c
object.month
object
c
month_id
:month_id
:id
object_id
object
c
qrcode
c
@pagamento.save
@pagamento
c
month
ano
mes
dia_vencimento
c
n
params[:dia_vencimento]
c
params[:data_vencimento]
c
object.turma_alunos[0]
object.turma_alunos[0].status = "qualquerocisa"
object.turma_alunos[0].status
object.turma_alunos[0]
object.turma_alunos.status
object.turma_alunos
object.turma_alunos.status
object.turma_alunos
object
c
object
c
@users
c
aluno
c
saiu
c
turma_atual
c
turma_atualizacao
turma_alunos
c
turma_atualizacao
turma_alunos
c
turma_atual
c
params
c
@user.password
@user
c
t.data
t.get
t
exit
c
telefones
c
firebase.get('telefones')
c
firebase
c
qrcode
users
mes.ano
mes.mes
users.size
users.count
users
c
users
users.size
users.count
users
c
nubank_qrcodes
c
nubank_qrcodes['pagamentos'][0]['id']
nubank_qrcodes['pagamentos'][0]
nubank_qrcodes['pagamentos']
nubank_qrcodes.to_h
nubank_qrcodes
c
nubank_qrcodes
c
qrcode
c
nubank_qrcodes[:pagamentos][0][:id]
nubank_qrcodes[:pagamentos][0]
nubank_qrcodes[:pagamentos]
nubank_qrcodes['pagamentos']
nubank_qrcodes
c
nubank_qrcodes
c
qrcode
c
pagamento
c
pagamento
c
qrcode
c
pagamento
c
pagamento
user.id
user
c
users
c
qrcode
c
qrcode[:pagamentos]
qrcode.pagamentos
qrcode
c
response
c
response
respose
c
t
c
response
resá¹•onse
c
resp
c
http.request(request)
http
gttp
c
request
c
request
c
request
c
resposta['last_processed_transaction']
[200~resposta['last_processed_transaction']~
c
Config.first
Config.count
c
resposta
c
resposta['processed_transactions'][0]['status']
resposta['processed_transactions'][0]
resposta['processed_transactions']
resposta[:processed_transactions]
resposta.processed_transactions
resposta[0]
resposta
c
JSON.parse(response)
response
c
object.user[0].pagamentos
object.user[0]
object.user
c
object.user[0].pagamentos
object.user[0].pagamento
object.user[0]
object.user
object
c
object.user
object.users
object
c
params[:id]
params['id'].true?
params['id']
params['id]
params.permit[:id]
params
c
params.permit(:telefone)
params
c
params
c
params
c
turma
c
params
c
params['sede']
params.count
params
c
User.find(4)
c
user
c
params['id'].present?
params['id']
params
c
params['endereco']
params
c
current_user
